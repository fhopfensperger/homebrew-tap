# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class AsyncMessagingClient < Formula
  desc "Sends and receives messages in an asynchronous way to or from different Cloud messaging services."
  homepage "https://fhopfensperger.github.io"
  version "0.2.13"
  license "Apache 2.0"

  depends_on "git" => :optional
  depends_on "go" => :optional

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/fhopfensperger/async-messaging-client/releases/download/v0.2.13/async-messaging-client_darwin_amd64.tar.gz"
      sha256 "9c59361f7ca26b05af632169f7bfee76d4b1dc7093f7c8d5d60fadb39adf0c5b"

      def install
        bin.install "async-messaging-client"
        bash_completion.install "completions/async-messaging-client.bash" => "async-messaging-client"
        zsh_completion.install "completions/async-messaging-client.zsh" => "_async-messaging-client"
        fish_completion.install "completions/async-messaging-client.fish"
      end
    end
    if Hardware::CPU.arm?
      url "https://github.com/fhopfensperger/async-messaging-client/releases/download/v0.2.13/async-messaging-client_darwin_arm64.tar.gz"
      sha256 "0a2408038105245c51ffb91313bb1b0f01981919fcae07cff7ae7c96750be68b"

      def install
        bin.install "async-messaging-client"
        bash_completion.install "completions/async-messaging-client.bash" => "async-messaging-client"
        zsh_completion.install "completions/async-messaging-client.zsh" => "_async-messaging-client"
        fish_completion.install "completions/async-messaging-client.fish"
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      if Hardware::CPU.is_64_bit?
        url "https://github.com/fhopfensperger/async-messaging-client/releases/download/v0.2.13/async-messaging-client_linux_amd64.tar.gz"
        sha256 "000f89dbaa61fca73c1b3f70560708995b798060cbff2901735f84ae886582a8"

        def install
          bin.install "async-messaging-client"
          bash_completion.install "completions/async-messaging-client.bash" => "async-messaging-client"
          zsh_completion.install "completions/async-messaging-client.zsh" => "_async-messaging-client"
          fish_completion.install "completions/async-messaging-client.fish"
        end
      end
    end
    if Hardware::CPU.arm?
      if !Hardware::CPU.is_64_bit?
        url "https://github.com/fhopfensperger/async-messaging-client/releases/download/v0.2.13/async-messaging-client_linux_armv6.tar.gz"
        sha256 "c4f43745b22ce11eae1a484f8631868acfde85bf29292722efadae70989f8269"

        def install
          bin.install "async-messaging-client"
          bash_completion.install "completions/async-messaging-client.bash" => "async-messaging-client"
          zsh_completion.install "completions/async-messaging-client.zsh" => "_async-messaging-client"
          fish_completion.install "completions/async-messaging-client.fish"
        end
      end
    end
    if Hardware::CPU.arm?
      if Hardware::CPU.is_64_bit?
        url "https://github.com/fhopfensperger/async-messaging-client/releases/download/v0.2.13/async-messaging-client_linux_arm64.tar.gz"
        sha256 "4a00fd92e543e388b2f2ebf0a393151f5bb7835ce85c39c6d5661e56ec77013e"

        def install
          bin.install "async-messaging-client"
          bash_completion.install "completions/async-messaging-client.bash" => "async-messaging-client"
          zsh_completion.install "completions/async-messaging-client.zsh" => "_async-messaging-client"
          fish_completion.install "completions/async-messaging-client.fish"
        end
      end
    end
  end

  test do
    system "#{bin}/async-messaging-client -v"
  end
end
