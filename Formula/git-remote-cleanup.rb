# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class GitRemoteCleanup < Formula
  desc "Get and delete no longer needed release branches from a remote repository."
  homepage "https://fhopfensperger.github.io"
  version "0.3.14"
  license "Apache 2.0"

  depends_on "git" => :optional
  depends_on "go" => :optional

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/fhopfensperger/git-remote-cleanup/releases/download/v0.3.14/git-remote-cleanup_darwin_amd64.tar.gz"
      sha256 "4e1575822a169179cbdead50a7629828cbe11df9f160cb8b2ad8194f4f915a0c"

      def install
        bin.install "git-remote-cleanup"
        bash_completion.install "completions/git-remote-cleanup.bash" => "git-remote-cleanup"
        zsh_completion.install "completions/git-remote-cleanup.zsh" => "_git-remote-cleanup"
        fish_completion.install "completions/git-remote-cleanup.fish"
      end
    end
    if Hardware::CPU.arm?
      url "https://github.com/fhopfensperger/git-remote-cleanup/releases/download/v0.3.14/git-remote-cleanup_darwin_arm64.tar.gz"
      sha256 "367448a3ba8c629e853caa4e0d73688778f747fb7fd22130fe8cc4709ae0270d"

      def install
        bin.install "git-remote-cleanup"
        bash_completion.install "completions/git-remote-cleanup.bash" => "git-remote-cleanup"
        zsh_completion.install "completions/git-remote-cleanup.zsh" => "_git-remote-cleanup"
        fish_completion.install "completions/git-remote-cleanup.fish"
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      if Hardware::CPU.is_64_bit?
        url "https://github.com/fhopfensperger/git-remote-cleanup/releases/download/v0.3.14/git-remote-cleanup_linux_amd64.tar.gz"
        sha256 "5cfb1982460f4dc35db1a3c86e59b353234dd5bf2cf15bf5dfeea08591df32f8"

        def install
          bin.install "git-remote-cleanup"
          bash_completion.install "completions/git-remote-cleanup.bash" => "git-remote-cleanup"
          zsh_completion.install "completions/git-remote-cleanup.zsh" => "_git-remote-cleanup"
          fish_completion.install "completions/git-remote-cleanup.fish"
        end
      end
    end
    if Hardware::CPU.arm?
      if !Hardware::CPU.is_64_bit?
        url "https://github.com/fhopfensperger/git-remote-cleanup/releases/download/v0.3.14/git-remote-cleanup_linux_armv6.tar.gz"
        sha256 "a3435626a18156268a83d704f54aac72ecd922a3ff612358fbe9536973e6ffef"

        def install
          bin.install "git-remote-cleanup"
          bash_completion.install "completions/git-remote-cleanup.bash" => "git-remote-cleanup"
          zsh_completion.install "completions/git-remote-cleanup.zsh" => "_git-remote-cleanup"
          fish_completion.install "completions/git-remote-cleanup.fish"
        end
      end
    end
    if Hardware::CPU.arm?
      if Hardware::CPU.is_64_bit?
        url "https://github.com/fhopfensperger/git-remote-cleanup/releases/download/v0.3.14/git-remote-cleanup_linux_arm64.tar.gz"
        sha256 "8e07ae7ae3848e42bffe3574869678865e4d37ddbe7463bf4e5a13ba44eb85f4"

        def install
          bin.install "git-remote-cleanup"
          bash_completion.install "completions/git-remote-cleanup.bash" => "git-remote-cleanup"
          zsh_completion.install "completions/git-remote-cleanup.zsh" => "_git-remote-cleanup"
          fish_completion.install "completions/git-remote-cleanup.fish"
        end
      end
    end
  end

  test do
    system "#{bin}/git-remote-cleanup -v"
  end
end
