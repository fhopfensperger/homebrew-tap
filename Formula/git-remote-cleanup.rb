# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class GitRemoteCleanup < Formula
  desc "Get and delete no longer needed release branches from a remote repository."
  homepage "https://fhopfensperger.github.io"
  version "0.3.8"
  license "Apache 2.0"

  depends_on "go" => :optional
  depends_on "git" => :optional

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/fhopfensperger/git-remote-cleanup/releases/download/v0.3.8/git-remote-cleanup_darwin_amd64.tar.gz"
      sha256 "cb3adaf951c7eb743cacd3f774b5c73fd353c80077a61e45ef7f8c965559e389"

      def install
        bin.install "git-remote-cleanup"
        bash_completion.install "completions/git-remote-cleanup.bash" => "git-remote-cleanup"
        zsh_completion.install "completions/git-remote-cleanup.zsh" => "_git-remote-cleanup"
        fish_completion.install "completions/git-remote-cleanup.fish"
      end
    end
    if Hardware::CPU.arm?
      url "https://github.com/fhopfensperger/git-remote-cleanup/releases/download/v0.3.8/git-remote-cleanup_darwin_arm64.tar.gz"
      sha256 "63ee97c1418dccb979ed15d013313eb80ae40ebac54ba50d5c55dfab6dc18d70"

      def install
        bin.install "git-remote-cleanup"
        bash_completion.install "completions/git-remote-cleanup.bash" => "git-remote-cleanup"
        zsh_completion.install "completions/git-remote-cleanup.zsh" => "_git-remote-cleanup"
        fish_completion.install "completions/git-remote-cleanup.fish"
      end
    end
  end

  on_linux do
    if Hardware::CPU.arm? && !Hardware::CPU.is_64_bit?
      url "https://github.com/fhopfensperger/git-remote-cleanup/releases/download/v0.3.8/git-remote-cleanup_linux_armv6.tar.gz"
      sha256 "61502357b2fdbff80058a23ac3a2c42d99e4d5941970c83a4903e216784836c6"

      def install
        bin.install "git-remote-cleanup"
        bash_completion.install "completions/git-remote-cleanup.bash" => "git-remote-cleanup"
        zsh_completion.install "completions/git-remote-cleanup.zsh" => "_git-remote-cleanup"
        fish_completion.install "completions/git-remote-cleanup.fish"
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/fhopfensperger/git-remote-cleanup/releases/download/v0.3.8/git-remote-cleanup_linux_amd64.tar.gz"
      sha256 "ade0f50ace8fa811e84df61ac9c4c57e998c2bff7268d43b23cf5abd9afc1ae6"

      def install
        bin.install "git-remote-cleanup"
        bash_completion.install "completions/git-remote-cleanup.bash" => "git-remote-cleanup"
        zsh_completion.install "completions/git-remote-cleanup.zsh" => "_git-remote-cleanup"
        fish_completion.install "completions/git-remote-cleanup.fish"
      end
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/fhopfensperger/git-remote-cleanup/releases/download/v0.3.8/git-remote-cleanup_linux_arm64.tar.gz"
      sha256 "726bb90de0038ab3f2dd6b7b1d55e0ddae2287d094d322ab73bbe0be309fe3a3"

      def install
        bin.install "git-remote-cleanup"
        bash_completion.install "completions/git-remote-cleanup.bash" => "git-remote-cleanup"
        zsh_completion.install "completions/git-remote-cleanup.zsh" => "_git-remote-cleanup"
        fish_completion.install "completions/git-remote-cleanup.fish"
      end
    end
  end

  test do
    system "#{bin}/git-remote-cleanup -v"
  end
end
